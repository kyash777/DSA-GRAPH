class Solution {
    public static ArrayList<Integer> topoSort(int v, int[][] edges) {
        
        ArrayList<ArrayList<Integer>>adj=new ArrayList<>();
        
        for(int i=0;i<v;i++){
            adj.add(new ArrayList<Integer>());
        }
        
        for(int i=0;i<edges.length;i++){
            int u=edges[i][0];
            int vv=edges[i][1];
            
            adj.get(u).add(vv);
        }
        
        int indegree[]=new int [v];
        
        for(int i=0;i<v;i++){
            indegree[i]=0;
        }
        
        for(int i=0;i<v;i++){
            for(int j: adj.get(i)){
                indegree[j]++;
            }
        }
        
        Queue<Integer>st=new LinkedList<>();
       
        
        for(int i=0;i<v;i++){
            if(indegree[i]==0){
                st.add(i);
            }
        }
        
        ArrayList<Integer>res=new ArrayList<>();
        
        while(!st.isEmpty()){
            int node=st.poll();
            res.add(node);
            
            for(int i: adj.get(node)){
                indegree[i]--;
                if(indegree[i]==0){
                    st.add(i);
                }
            }
        }
        
        return res;
        
    }
}
